{"version":3,"sources":["webpack:///./node_modules/terra-doc-template/docs/README.md","webpack:///./node_modules/terra-doc-template/src/DocTemplate.jsx?3d5e","webpack:///./node_modules/terra-doc-template/src/DocTemplate.jsx","webpack:///./node_modules/terra-doc-template/lib/terra-dev-site/doc/example/BadgeExamples.js","webpack:///./node_modules/terra-doc-template/src/terra-dev-site/doc/example/BadgeExamples.jsx","webpack:///./node_modules/terra-doc-template/src/terra-dev-site/doc/doc-template/DocTemplate.1.doc.jsx","webpack:///./node_modules/terra-doc-template/lib/terra-dev-site/doc/doc-template/DocTemplate.1.doc.js"],"names":["module","exports","Object","defineProperty","value","default","_react","_interopRequireDefault","_NpmBadge","_package","obj","__esModule","_default","createElement","packageName","name","packageVersion","version","packageUrl","_DocTemplate","_README","_DocTemplate2","_DocTemplate3","_BadgeExamples","_BadgeExamples2","_DocTemplate4","readme","srcPath","examples","title","source","example","propsTables","componentName","componentSrc","componentProps"],"mappings":"uoFAAA,OAAe,ykB,mBCAfA,EAAOC,QAAU,8hJ,kCCAjB,OAAe,k5J,kCCEfC,OAAOC,eAAeF,EAAS,aAAc,CAC3CG,OAAO,IAETH,EAAQI,aAAU,EAElB,IAAIC,EAASC,EAAuB,EAAQ,IAExCC,EAAYD,EAAuB,EAAQ,OAE3CE,EAAW,EAAQ,MAEvB,SAASF,EAAuBG,GAAO,OAAOA,GAAOA,EAAIC,WAAaD,EAAM,CAAEL,QAASK,GAEvF,IAeIE,EAbgB,WAClB,OAAON,EAAOD,QAAQQ,cAAc,MAAO,KAAMP,EAAOD,QAAQQ,cAAc,IAAK,KAAM,oCAAqCP,EAAOD,QAAQQ,cAAcL,EAAUH,QAAS,CAC5KS,YAAaL,EAASM,OACpBT,EAAOD,QAAQQ,cAAc,IAAK,KAAM,8CAA+CP,EAAOD,QAAQQ,cAAcL,EAAUH,QAAS,CACzIS,YAAaL,EAASM,KACtBC,eAAgBP,EAASQ,UACvBX,EAAOD,QAAQQ,cAAc,IAAK,KAAM,8DAA+DP,EAAOD,QAAQQ,cAAcL,EAAUH,QAAS,CACzJS,YAAaL,EAASM,KACtBG,WAVa,kGAWbF,eAAgBP,EAASQ,YAK7BhB,EAAQI,QAAUO,G,kCC/BlB,OAAe,ssB,kCCAf,OAAe,2mD,kCCEfV,OAAOC,eAAeF,EAAS,aAAc,CAC3CG,OAAO,IAETH,EAAQI,aAAU,EAElB,IAAIC,EAASC,EAAuB,EAAQ,IAExCY,EAAeZ,EAAuB,EAAQ,OAE9Ca,EAAUb,EAAuB,EAAQ,OAEzCE,EAAW,EAAQ,MAEnBY,EAAgBd,EAAuB,EAAQ,OAE/Ce,EAAgBf,EAAuB,EAAQ,OAE/CgB,EAAiBhB,EAAuB,EAAQ,OAEhDiB,EAAkBjB,EAAuB,EAAQ,OAEjDkB,EAAgBlB,EAAuB,EAAQ,OAEnD,SAASA,EAAuBG,GAAO,OAAOA,GAAOA,EAAIC,WAAaD,EAAM,CAAEL,QAASK,GAKvF,IAuBIE,EAvBsB,WACxB,OAAON,EAAOD,QAAQQ,cAAcM,EAAad,QAAS,CACxDS,YAAaL,EAASM,KACtBC,eAAgBP,EAASQ,QACzBS,OAAQN,EAAQf,QAChBsB,QAAS,+EACTC,SAAU,CAAC,CACTC,MAAO,cACPC,OAAQL,EAAcpB,QACtB0B,QAASzB,EAAOD,QAAQQ,cAAc,IAAK,KAAM,+JAChD,CACDgB,MAAO,yBACPC,OAAQN,EAAgBnB,QACxB0B,QAASzB,EAAOD,QAAQQ,cAAcU,EAAelB,QAAS,QAEhE2B,YAAa,CAAC,CACZC,cAAe,eACfC,aAAcZ,EAAcjB,QAC5B8B,eAAgBd,EAAchB,aAMpCJ,EAAQI,QAAUO","file":"193-53818be2078f3e70b902.js","sourcesContent":["export default \"# Terra Doc Template\\n\\nThe terra-doc-template component provides an adjustable template for documentation pages.\\n\\n## Getting Started\\n\\n- Install with [npmjs](https://www.npmjs.com):\\n  - `npm install terra-doc-template`\\n\\n<!-- AUTO-GENERATED-CONTENT:START Peer Dependencies -->\\n## Peer Dependencies\\n\\nThis component requires the following peer dependencies be installed in your app for the component to properly function.\\n\\n| Peer Dependency | Version |\\n|-|-|\\n| react | ^16.8.5 |\\n| react-dom | ^16.8.5 |\\n\\n\\n\\n<!-- AUTO-GENERATED-CONTENT:END -->\\n\"","module.exports = \"<table style=\\\"display: table; margin-bottom: 1.25rem\\\"><thead><tr style=\\\"line-height: 1.5\\\"><th style=\\\"width: 10%\\\">Prop Name</th><th style=\\\"width: 25%\\\">Type</th><th style=\\\"width: 10%\\\">Is Required</th><th style=\\\"width: 10%\\\">Default Value</th><th style=\\\"width: 45%\\\">Description</th></tr></thead><tbody><tr style=\\\"vertical-align: top\\\"><td style=\\\"font-weight: bold; padding-bottom: 1.8rem\\\">children</td><td style=\\\"padding-bottom: 1.8rem\\\">node</td><td style=\\\"padding-bottom: 1.8rem\\\">optional</td><td style=\\\"font-weight: bold; padding-bottom: 1.8rem\\\">none</td><td style=\\\"padding-bottom: 1.8rem\\\">Enables the ability to add custom content to doc template. Children will be rendered after all other content.</td></tr><tr style=\\\"vertical-align: top\\\"><td style=\\\"font-weight: bold; padding-bottom: 1.8rem\\\">packageName</td><td style=\\\"padding-bottom: 1.8rem\\\">string</td><td style=\\\"padding-bottom: 1.8rem\\\">optional</td><td style=\\\"font-weight: bold; padding-bottom: 1.8rem\\\">''</td><td style=\\\"padding-bottom: 1.8rem\\\">The given component&#39;s npm package name.</td></tr><tr style=\\\"vertical-align: top\\\"><td style=\\\"font-weight: bold; padding-bottom: 1.8rem\\\">packageUrl</td><td style=\\\"padding-bottom: 1.8rem\\\">string</td><td style=\\\"padding-bottom: 1.8rem\\\">optional</td><td style=\\\"font-weight: bold; padding-bottom: 1.8rem\\\">''</td><td style=\\\"padding-bottom: 1.8rem\\\">The url for the provided package if not in npm. This will be ignored if packageVersion is not set.</td></tr><tr style=\\\"vertical-align: top\\\"><td style=\\\"font-weight: bold; padding-bottom: 1.8rem\\\">packageVersion</td><td style=\\\"padding-bottom: 1.8rem\\\">string</td><td style=\\\"padding-bottom: 1.8rem\\\">optional</td><td style=\\\"font-weight: bold; padding-bottom: 1.8rem\\\">''</td><td style=\\\"padding-bottom: 1.8rem\\\">The given component&#39;s package version.</td></tr><tr style=\\\"vertical-align: top\\\"><td style=\\\"font-weight: bold; padding-bottom: 1.8rem\\\">readme</td><td style=\\\"padding-bottom: 1.8rem\\\">string</td><td style=\\\"padding-bottom: 1.8rem\\\">optional</td><td style=\\\"font-weight: bold; padding-bottom: 1.8rem\\\">''</td><td style=\\\"padding-bottom: 1.8rem\\\">The given component&#39;s readme file imported to a string.</td></tr><tr style=\\\"vertical-align: top\\\"><td style=\\\"font-weight: bold; padding-bottom: 1.8rem\\\">srcPath</td><td style=\\\"padding-bottom: 1.8rem\\\">string</td><td style=\\\"padding-bottom: 1.8rem\\\">optional</td><td style=\\\"font-weight: bold; padding-bottom: 1.8rem\\\">''</td><td style=\\\"padding-bottom: 1.8rem\\\">The url to the source code for the given component.</td></tr><tr style=\\\"vertical-align: top\\\"><td style=\\\"font-weight: bold; padding-bottom: 1.8rem\\\">examples</td><td style=\\\"padding-bottom: 1.8rem\\\">An array of objects structured like:<br /><pre style=\\\"white-space: pre-wrap\\\">{\\n \\\"name\\\": \\\"shape\\\",\\n \\\"value\\\": {\\n  \\\"title\\\": {\\n   \\\"name\\\": \\\"string\\\",\\n   \\\"required\\\": false\\n  },\\n  \\\"description\\\": {\\n   \\\"name\\\": \\\"node\\\",\\n   \\\"required\\\": false\\n  },\\n  \\\"example\\\": {\\n   \\\"name\\\": \\\"element\\\",\\n   \\\"required\\\": false\\n  },\\n  \\\"source\\\": {\\n   \\\"name\\\": \\\"string\\\",\\n   \\\"required\\\": false\\n  }\\n }\\n}</pre></td><td style=\\\"padding-bottom: 1.8rem\\\">optional</td><td style=\\\"font-weight: bold; padding-bottom: 1.8rem\\\">[]</td><td style=\\\"padding-bottom: 1.8rem\\\">All of the example(s) that will be displayed. An empty array is supported.<pre><code style=\\\"white-space: pre-wrap\\\">title: The title of the example\\ndescription: A description of the example to be displayed below the title\\nexample: The example to be displayed\\nsource: The source code of the example</code></pre></td></tr><tr style=\\\"vertical-align: top\\\"><td style=\\\"font-weight: bold; padding-bottom: 1.8rem\\\">propsTables</td><td style=\\\"padding-bottom: 1.8rem\\\">An array of objects structured like:<br /><pre style=\\\"white-space: pre-wrap\\\">{\\n \\\"name\\\": \\\"shape\\\",\\n \\\"value\\\": {\\n  \\\"componentSrc\\\": {\\n   \\\"name\\\": \\\"string\\\",\\n   \\\"required\\\": false\\n  },\\n  \\\"componentName\\\": {\\n   \\\"name\\\": \\\"string\\\",\\n   \\\"required\\\": false\\n  },\\n  \\\"componentProps\\\": {\\n   \\\"name\\\": \\\"string\\\",\\n   \\\"required\\\": false\\n  },\\n  \\\"propsResolution\\\": {\\n   \\\"name\\\": \\\"string\\\",\\n   \\\"required\\\": false\\n  }\\n }\\n}</pre></td><td style=\\\"padding-bottom: 1.8rem\\\">optional</td><td style=\\\"font-weight: bold; padding-bottom: 1.8rem\\\">[]</td><td style=\\\"padding-bottom: 1.8rem\\\">All of the props table(s) that will be displayed. An empty array is supported.<pre><code style=\\\"white-space: pre-wrap\\\">componentSrc: The source code of the component\\ncomponentName: The name of the component\\npropsResolution: Type of react-docgen resolver to use for prop-types resolution. Supported values are `default` or `findAllComponentDefinitions`. Will use `default` if left unspecified.</code></pre></td></tr></tbody></table>\"","export default \"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport PropsTable from 'terra-props-table';\\nimport Markdown from 'terra-markdown';\\nimport classNames from 'classnames/bind';\\nimport NpmBadge from './NpmBadge';\\nimport IndexExampleTemplate from './ExampleTemplate';\\nimport styles from './DocTemplate.module.scss';\\n\\nconst cx = classNames.bind(styles);\\n\\nconst propTypes = {\\n  /**\\n   * Enables the ability to add custom content to doc template. Children will be rendered after all other content.\\n   */\\n  children: PropTypes.node,\\n  /**\\n   * The given component's npm package name.\\n   */\\n  packageName: PropTypes.string,\\n  /**\\n   * The url for the provided package if not in npm. This will be ignored if packageVersion is not set.\\n   */\\n  packageUrl: PropTypes.string,\\n  /**\\n   * The given component's package version.\\n   */\\n  packageVersion: PropTypes.string,\\n  /**\\n   * The given component's readme file imported to a string.\\n   */\\n  readme: PropTypes.string,\\n  /**\\n   * The url to the source code for the given component.\\n   */\\n  srcPath: PropTypes.string,\\n  /**\\n   * All of the example(s) that will be displayed. An empty array is supported.\\n   * ```\\n   * title: The title of the example\\n   * description: A description of the example to be displayed below the title\\n   * example: The example to be displayed\\n   * source: The source code of the example\\n   * ```\\n   */\\n  examples: PropTypes.arrayOf(PropTypes.shape({\\n    title: PropTypes.string,\\n    description: PropTypes.node,\\n    example: PropTypes.element,\\n    source: PropTypes.string,\\n  })),\\n  /**\\n   * All of the props table(s) that will be displayed. An empty array is supported.\\n   * ```\\n   * componentSrc: The source code of the component\\n   * componentName: The name of the component\\n   * propsResolution: Type of react-docgen resolver to use for prop-types resolution. Supported values are `default` or `findAllComponentDefinitions`. Will use `default` if left unspecified.\\n   * ```\\n   */\\n  propsTables: PropTypes.arrayOf(PropTypes.shape({\\n    componentSrc: PropTypes.string,\\n    componentName: PropTypes.string,\\n    componentProps: PropTypes.string,\\n    propsResolution: PropTypes.string,\\n  })),\\n};\\n\\nconst defaultProps = {\\n  packageName: '',\\n  packageUrl: '',\\n  packageVersion: '',\\n  readme: '',\\n  srcPath: '',\\n  examples: [],\\n  propsTables: [],\\n};\\n\\nconst DocTemplate = ({\\n  packageName, packageVersion, packageUrl, readme, srcPath, examples, propsTables, children, ...customProps\\n}) => {\\n  const localExamples = examples;\\n  let localPropsTables;\\n  if (propsTables) localPropsTables = propsTables;\\n\\n  // Assign unique identifiers to use as keys later\\n  let id = 0;\\n  for (let i = 0; i < localExamples.length; i += 1) {\\n    localExamples[i].id = id;\\n    id += 1;\\n  }\\n\\n  if (localPropsTables) {\\n    for (let i = 0; i < localPropsTables.length; i += 1) {\\n      localPropsTables[i].id = id;\\n      id += 1;\\n    }\\n  }\\n\\n  const docTemplateClassNames = cx([\\n    'doc-template',\\n    customProps.className,\\n  ]);\\n\\n  let exampleHeader;\\n  if (localExamples.length > 0) {\\n    const exampleHeaderText = localExamples.length > 1 ? 'Examples' : 'Example';\\n    exampleHeader = <h1 className={cx('examples-header')}>{exampleHeaderText}</h1>;\\n  }\\n\\n  const badge = (\\n    <NpmBadge\\n      packageName={packageName}\\n      packageUrl={packageUrl}\\n      packageVersion={packageVersion}\\n    />\\n  );\\n\\n  return (\\n    <div {...customProps} className={docTemplateClassNames}>\\n      <div className={cx('doc-card')}>\\n        {packageName && badge}\\n        {readme && <Markdown src={readme} />}\\n        {srcPath && <a href={srcPath}>View component source code</a>}\\n      </div>\\n\\n      {exampleHeader}\\n      {localExamples.map(example => (\\n        <IndexExampleTemplate\\n          title={example.title}\\n          example={example.example}\\n          exampleSrc={example.source}\\n          description={example.description}\\n          key={example.id}\\n        />\\n      ))}\\n\\n      <div className={cx('doc-card')}>\\n        {propsTables[0] && propsTables[0].componentProps\\n          ? localPropsTables.map(propsTable => (\\n            <div className={cx('props-table-markdown')} key={propsTable.id}>\\n              <h2>\\n                {propsTable.componentName}\\n                {' Props'}\\n              </h2>\\n              <Markdown src={propsTable.componentProps} />\\n            </div>\\n          ))\\n          : localPropsTables.map(propsTable => (\\n            <PropsTable\\n              src={propsTable.componentSrc}\\n              componentName={propsTable.componentName}\\n              key={propsTable.id}\\n              propsResolution={propsTable.propsResolution}\\n            />\\n          ))}\\n      </div>\\n      {children && <div className={cx('doc-card')}>{children}</div>}\\n    </div>\\n  );\\n};\\n\\nDocTemplate.propTypes = propTypes;\\nDocTemplate.defaultProps = defaultProps;\\n\\nexport default DocTemplate;\\n\"","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _NpmBadge = _interopRequireDefault(require(\"../../../NpmBadge\"));\n\nvar _package = require(\"../../../../package.json\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar packageUrl = 'https://engineering.cerner.com/terra-ui/components/terra-doc-template/doc-template/doc-template';\n\nvar BadgeExamples = function BadgeExamples() {\n  return _react.default.createElement(\"div\", null, _react.default.createElement(\"p\", null, \"Dynamically generated npm badge:\"), _react.default.createElement(_NpmBadge.default, {\n    packageName: _package.name\n  }), _react.default.createElement(\"p\", null, \"Custom Badge with packageVersion prop set:\"), _react.default.createElement(_NpmBadge.default, {\n    packageName: _package.name,\n    packageVersion: _package.version\n  }), _react.default.createElement(\"p\", null, \"Custom Badge with packageUrl and packageVersion props set:\"), _react.default.createElement(_NpmBadge.default, {\n    packageName: _package.name,\n    packageUrl: packageUrl,\n    packageVersion: _package.version\n  }));\n};\n\nvar _default = BadgeExamples;\nexports.default = _default;","export default \"import React from 'react';\\nimport NpmBadge from '../../../NpmBadge';\\nimport { name, version } from '../../../../package.json';\\n\\nconst packageUrl = 'https://engineering.cerner.com/terra-ui/components/terra-doc-template/doc-template/doc-template';\\n\\nconst BadgeExamples = () => (\\n  <div>\\n    <p>Dynamically generated npm badge:</p>\\n    <NpmBadge packageName={name} />\\n    <p>Custom Badge with packageVersion prop set:</p>\\n    <NpmBadge packageName={name} packageVersion={version} />\\n    <p>Custom Badge with packageUrl and packageVersion props set:</p>\\n    <NpmBadge packageName={name} packageUrl={packageUrl} packageVersion={version} />\\n  </div>\\n);\\n\\nexport default BadgeExamples;\\n\"","export default \"import React from 'react';\\nimport DocTemplate from '../../../../lib/DocTemplate';\\nimport readme from '../../../../docs/README.md';\\n\\nimport { name, version } from '../../../../package.json';\\n\\n/* eslint-disable import/no-webpack-loader-syntax, import/first, import/no-duplicates */\\nimport DocTemplatePropsTable from '!terra-props-table-loader!../../../../src/DocTemplate';\\nimport DocTemplateSrc from '!raw-loader!../../../../src/DocTemplate';\\nimport BadgeExamples from '../example/BadgeExamples';\\nimport BadgeExamplesSrc from '!raw-loader!../../../../src/terra-dev-site/doc/example/BadgeExamples';\\n\\n/* eslint-disable-next-line import/no-self-import */\\nimport SelfSrc from '!raw-loader!../../../../src/terra-dev-site/doc/doc-template/DocTemplate.1.doc';\\n\\nconst DocTemplateExamples = () => (\\n  <DocTemplate\\n    packageName={name}\\n    packageVersion={version}\\n    readme={readme}\\n    srcPath=\\\"https://github.com/cerner/terra-core/tree/master/packages/terra-doc-template\\\"\\n    examples={[\\n      {\\n        title: 'DocTemplate',\\n        source: SelfSrc,\\n        example: (<p>This very page was generated using the DocTemplate. The template supports more than one Props Table and example, even though those were not featured here.</p>),\\n      },\\n      {\\n        title: 'Package Badge Examples',\\n        source: BadgeExamplesSrc,\\n        example: <BadgeExamples />,\\n      },\\n    ]}\\n    propsTables={[\\n      {\\n        componentName: 'Doc Template',\\n        componentSrc: DocTemplateSrc,\\n        componentProps: DocTemplatePropsTable,\\n      },\\n    ]}\\n  />\\n);\\n\\nexport default DocTemplateExamples;\\n\"","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _DocTemplate = _interopRequireDefault(require(\"../../../../lib/DocTemplate\"));\n\nvar _README = _interopRequireDefault(require(\"../../../../docs/README.md\"));\n\nvar _package = require(\"../../../../package.json\");\n\nvar _DocTemplate2 = _interopRequireDefault(require(\"!terra-props-table-loader!../../../../src/DocTemplate\"));\n\nvar _DocTemplate3 = _interopRequireDefault(require(\"!raw-loader!../../../../src/DocTemplate\"));\n\nvar _BadgeExamples = _interopRequireDefault(require(\"../example/BadgeExamples\"));\n\nvar _BadgeExamples2 = _interopRequireDefault(require(\"!raw-loader!../../../../src/terra-dev-site/doc/example/BadgeExamples\"));\n\nvar _DocTemplate4 = _interopRequireDefault(require(\"!raw-loader!../../../../src/terra-dev-site/doc/doc-template/DocTemplate.1.doc\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-disable import/no-webpack-loader-syntax, import/first, import/no-duplicates */\n\n/* eslint-disable-next-line import/no-self-import */\nvar DocTemplateExamples = function DocTemplateExamples() {\n  return _react.default.createElement(_DocTemplate.default, {\n    packageName: _package.name,\n    packageVersion: _package.version,\n    readme: _README.default,\n    srcPath: \"https://github.com/cerner/terra-core/tree/master/packages/terra-doc-template\",\n    examples: [{\n      title: 'DocTemplate',\n      source: _DocTemplate4.default,\n      example: _react.default.createElement(\"p\", null, \"This very page was generated using the DocTemplate. The template supports more than one Props Table and example, even though those were not featured here.\")\n    }, {\n      title: 'Package Badge Examples',\n      source: _BadgeExamples2.default,\n      example: _react.default.createElement(_BadgeExamples.default, null)\n    }],\n    propsTables: [{\n      componentName: 'Doc Template',\n      componentSrc: _DocTemplate3.default,\n      componentProps: _DocTemplate2.default\n    }]\n  });\n};\n\nvar _default = DocTemplateExamples;\nexports.default = _default;"],"sourceRoot":""}