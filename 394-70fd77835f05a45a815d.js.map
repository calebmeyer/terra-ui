{"version":3,"sources":["webpack:///./node_modules/terra-table/lib/terra-dev-site/doc/guides/mock-data/mock-select.js","webpack:///./node_modules/terra-table/lib/terra-dev-site/doc/guides/StaticWidthTable.js","webpack:///./node_modules/terra-table/lib/terra-dev-site/doc/table/guides.5/StaticWidthTable.8.doc.mdx"],"names":["Object","defineProperty","exports","value","default","_default","key","toggleText","discloseText","primaryIndex","cells","title","layoutProps","MDXContent","components","props","isMDXComponent","description","isExpanded","example","exampleSrc","mdxType","parentName"],"mappings":"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","file":"394-70fd77835f05a45a815d.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar mockData = [{\n  key: 'unique-0',\n  toggleText: 'Toggle Power Row 0',\n  discloseText: 'Power Row 0 - Details',\n  primaryIndex: 1,\n  cells: [{\n    key: 'unique-0-0',\n    title: 'Item 0-0'\n  }, {\n    key: 'unique-0-1',\n    title: 'Item 0-1'\n  }, {\n    key: 'unique-0-2',\n    title: 'Item 0-2'\n  }, {\n    key: 'unique-0-3',\n    title: 'Item 0-3'\n  }]\n}, {\n  key: 'unique-1',\n  toggleText: 'Toggle Power Row 1',\n  discloseText: 'Power Row 1 - Details',\n  primaryIndex: 1,\n  cells: [{\n    key: 'unique-1-0',\n    title: 'Item 1-0'\n  }, {\n    key: 'unique-1-1',\n    title: 'Item 1-1'\n  }, {\n    key: 'unique-1-2',\n    title: 'Item 1-2'\n  }, {\n    key: 'unique-1-3',\n    title: 'Item 1-3'\n  }]\n}, {\n  key: 'unique-2',\n  toggleText: 'Toggle Power Row 2',\n  discloseText: 'Power Row 2 - Details',\n  primaryIndex: 1,\n  cells: [{\n    key: 'unique-2-0',\n    title: 'Item 2-0'\n  }, {\n    key: 'unique-2-1',\n    title: 'Item 2-1'\n  }, {\n    key: 'unique-2-2',\n    title: 'Item 2-2'\n  }, {\n    key: 'unique-2-3',\n    title: 'Item 2-3'\n  }]\n}, {\n  key: 'unique-3',\n  toggleText: 'Toggle Power Row 3',\n  discloseText: 'Power Row 3 - Details',\n  primaryIndex: 1,\n  cells: [{\n    key: 'unique-3-0',\n    title: 'Item 3-0'\n  }, {\n    key: 'unique-3-1',\n    title: 'Item 3-1'\n  }, {\n    key: 'unique-3-2',\n    title: 'Item 3-2'\n  }, {\n    key: 'unique-3-3',\n    title: 'Item 3-3'\n  }]\n}, {\n  key: 'unique-4',\n  toggleText: 'Toggle Power Row 4',\n  discloseText: 'Power Row 4 - Details',\n  primaryIndex: 1,\n  cells: [{\n    key: 'unique-4-0',\n    title: 'Item 4-0'\n  }, {\n    key: 'unique-4-1',\n    title: 'Item 4-1'\n  }, {\n    key: 'unique-4-2',\n    title: 'Item 4-2'\n  }, {\n    key: 'unique-4-3',\n    title: 'Item 4-3'\n  }]\n}];\nvar _default = mockData;\nexports.default = _default;","import React from 'react';\nimport Example from '/home/travis/build/cerner/terra-ui/node_modules/terra-table/lib/terra-dev-site/doc/guides/StaticWidthTable.js';\nimport Code from '/home/travis/build/cerner/terra-ui/node_modules/terra-table/lib/terra-dev-site/doc/guides/StaticWidthTable.js?dev-site-codeblock';\nimport ExampleTemplate from 'terra-dev-site/lib/loader-components/_ExampleTemplate';\n\nexport default ({ title, description, isExpanded }) => (\n      <ExampleTemplate\n        title={ title || 'Static Width Table'}\n        description={description}\n        example={<Example />}\n        exampleSrc={<Code />}\n        isExpanded={isExpanded}\n      />\n    );","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport StaticWidthTable from 'terra-table/lib/terra-dev-site/doc/guides/StaticWidthTable?dev-site-example';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"terra-table---static-width-columns\"\n    }}>{`Terra Table - Static Width Columns`}</h1>\n    <h2 {...{\n      \"id\": \"create-row-and-cell-generation-functions\"\n    }}>{`Create Row and Cell Generation Functions`}</h2>\n    <p>{`First we declare our method of creating our rows.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-diff\"\n      }}>{`+ const createRow = rowData => (\n+   {\n+     key: rowData.key,\n+     cells: createCellsForRow(rowData.cells),\n+   }\n+ );\n\n+ const createRows = data => data.map(childItem => createRow(childItem));\n`}</code></pre>\n    <p>{`Followed by unpacking our cell data into those rows.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-diff\"\n      }}>{`+ const createCell = cell => ({ key: cell.key, children: cell.title });\n\n+ const createCellsForRow = cells => cells.map(cell => createCell(cell));\n`}</code></pre>\n    <p>{`And then we define the functional component returning our table.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-diff\"\n      }}>{`+ const StaticWidthTable = () => (\n+   <Table\n+     summaryId=\"example-static-table\"\n+     summary=\"This table shows an implementation of static width table columns.\"\n+     numberOfColumns={4}\n+     cellPaddingStyle=\"standard\"\n+     headerData={{\n+       cells: [\n+         { key: 'cell-0', id: \\`unique-cell-0\\`, children: '60px' },\n+         { key: 'cell-1', id: \\`unique-cell-1\\`, children: '45px' },\n+         { key: 'cell-2', id: \\`unique-cell-2\\`, children: '5rem' },\n+         { key: 'cell-3', id: \\`unique-cell-3\\`, children: '120px' },\n+       ],\n+     }}\n+     bodyData={[{\n+       rows: createRows(mockData),\n+     }]}\n+   />\n+ );\n`}</code></pre>\n    <p>{`Then in order to adjust our columns, we set the `}<inlineCode parentName=\"p\">{`columnWidths`}</inlineCode>{` prop with your appropriate index based width values.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-diff\"\n      }}>{`const StaticWidthTable = () => (\n  <Table\n    summaryId=\"example-static-table\"\n    summary=\"This table shows an implementation of static width table columns.\"\n    numberOfColumns={4}\n    cellPaddingStyle=\"standard\"\n+   columnWidths={[\n+     { static: { value: 80, unit: 'px' } },\n+     { static: { value: 55, unit: 'px' } },\n+     { static: { value: 5, unit: 'rem' } },\n+     { static: { value: 120, unit: 'px' } },\n+   ]}\n    headerData={{\n      cells: [\n        { key: 'cell-0', id: \\`unique-cell-0\\`, children: '60px' },\n        { key: 'cell-1', id: \\`unique-cell-1\\`, children: '45px' },\n        { key: 'cell-2', id: \\`unique-cell-2\\`, children: '5rem' },\n        { key: 'cell-3', id: \\`unique-cell-3\\`, children: '120px' },\n      ],\n    }}\n    bodyData={[{\n      rows: createRows(mockData),\n    }]}\n  />\n);\n`}</code></pre>\n    <p>{`Using these steps we get the following example:`}</p>\n    <StaticWidthTable mdxType=\"StaticWidthTable\" />\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}