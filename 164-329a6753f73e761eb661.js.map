{"version":3,"sources":["webpack:///./node_modules/terra-toggle-button/lib/ToggleButton.js","webpack:///./node_modules/terra-toggle-button/package.json","webpack:///./node_modules/terra-toggle-button/lib/terra-dev-site/doc/example/DefaultToggleButton.js","webpack:///./node_modules/terra-toggle-button/lib/ToggleButton.module.scss?c3e0","webpack:///./node_modules/terra-toggle-button/lib/terra-dev-site/doc/example/AnimatedToggleButton.js","webpack:///./node_modules/terra-toggle-button/lib/terra-dev-site/doc/example/ButtonAttrsToggleButton.js","webpack:///./node_modules/terra-toggle-button/lib/terra-dev-site/doc/example/IsInitiallyOpenToggleButton.js","webpack:///./node_modules/terra-toggle-button/lib/terra-dev-site/doc/example/IsIconOnlyToggleButton.js","webpack:///./node_modules/terra-toggle-button/lib/terra-dev-site/doc/example/OpenCloseEventToggleButton.js","webpack:///./node_modules/terra-toggle-button/lib/terra-dev-site/doc/example/OpenCloseEventToggleButton.module.scss?32fc","webpack:///./node_modules/terra-toggle-button/lib/terra-dev-site/doc/example/OpenCloseTextToggleButton.js","webpack:///./node_modules/terra-toggle-button/src/ToggleButton.jsx","webpack:///./node_modules/terra-toggle-button/lib/terra-dev-site/doc/toggle-button/ToggleButton.1.doc.mdx"],"names":["Object","defineProperty","exports","value","default","_react","_interopRequireDefault","_propTypes","_bind","_terraButton","_IconChevronRight","_terraToggle","_ToggleButtonModule","obj","__esModule","_typeof","Symbol","iterator","constructor","prototype","_extends","assign","target","i","arguments","length","source","key","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_defineProperties","props","descriptor","enumerable","configurable","writable","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_assertThisInitialized","self","ReferenceError","_setPrototypeOf","p","cx","bind","propTypes","children","node","isRequired","closedButtonText","string","buttonAttrs","object","icon","element","isAnimated","bool","isIconAnimated","isIconOnly","isInitiallyOpen","onClose","func","onOpen","openedButtonText","defaultProps","createElement","ToggleButton","_React$Component","_this","instance","Constructor","TypeError","_classCallCheck","state","isOpen","handleOnClick","protoProps","staticProps","subClass","superClass","create","_inherits","e","preventDefault","setState","prevState","_this$props","customProps","normalizedOpenButtonText","buttonText","text","toggleButtonClass","className","button","onClick","Component","_default","Badge","url","name","version","module","layoutProps","MDXContent","components","isMDXComponent","title","description","isExpanded","example","exampleSrc","rows","type","mdxType","required","defaultValue","parentName"],"mappings":"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","file":"164-329a6753f73e761eb661.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _bind = _interopRequireDefault(require(\"classnames/bind\"));\n\nvar _terraButton = _interopRequireDefault(require(\"terra-button\"));\n\nvar _IconChevronRight = _interopRequireDefault(require(\"terra-icon/lib/icon/IconChevronRight\"));\n\nvar _terraToggle = _interopRequireDefault(require(\"terra-toggle\"));\n\nvar _ToggleButtonModule = _interopRequireDefault(require(\"./ToggleButton.module.scss\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar cx = _bind.default.bind(_ToggleButtonModule.default);\n\nvar propTypes = {\n  /**\n   * Content in the body of the toggle-button component that will be expanded or toggle-buttond\n   */\n  children: _propTypes.default.node.isRequired,\n\n  /**\n   * Sets the text inside of the button when the toggle-button component is closed\n   */\n  closedButtonText: _propTypes.default.string.isRequired,\n\n  /**\n   * Used to set props and HTML attributes on the toggle-button button\n   */\n  // eslint-disable-next-line react/forbid-prop-types\n  buttonAttrs: _propTypes.default.object,\n\n  /**\n   * Icon displayed next to text content within the toggle-button button\n   */\n  icon: _propTypes.default.element,\n\n  /**\n   * Sets the toggle-button to be animated when it is opened or closed\n   */\n  isAnimated: _propTypes.default.bool,\n\n  /**\n   * Used to turn on animation on toggle-button button icon\n   */\n  isIconAnimated: _propTypes.default.bool,\n\n  /**\n   * Sets the toggle-button to only display and icon. Uses closedButtonText prop as an aria-label on the button.\n   */\n  isIconOnly: _propTypes.default.bool,\n\n  /**\n   * Sets the toggle-button initial state to open\n   */\n  isInitiallyOpen: _propTypes.default.bool,\n\n  /**\n   * Callback function triggered when toggle-button is closed\n   */\n  onClose: _propTypes.default.func,\n\n  /**\n   * Callback function triggered when toggle-button is opened\n   */\n  onOpen: _propTypes.default.func,\n\n  /**\n   * Sets the text inside of the button when the toggle-button component is open\n   */\n  openedButtonText: _propTypes.default.string\n};\nvar defaultProps = {\n  isAnimated: false,\n  isIconAnimated: false,\n  isIconOnly: false,\n  isInitiallyOpen: false,\n  icon: _react.default.createElement(_IconChevronRight.default, null)\n};\n\nvar ToggleButton = /*#__PURE__*/function (_React$Component) {\n  _inherits(ToggleButton, _React$Component);\n\n  function ToggleButton(props) {\n    var _this;\n\n    _classCallCheck(this, ToggleButton);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ToggleButton).call(this, props));\n    _this.state = {\n      isOpen: props.isInitiallyOpen\n    };\n    _this.handleOnClick = _this.handleOnClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ToggleButton, [{\n    key: \"handleOnClick\",\n    value: function handleOnClick(e) {\n      e.preventDefault(); // Fire event from toggle handlers\n\n      if (!this.state.isOpen && this.props.onOpen) {\n        this.props.onOpen();\n      } else if (this.state.isOpen && this.props.onClose) {\n        this.props.onClose();\n      }\n\n      this.setState(function (prevState) {\n        return {\n          isOpen: !prevState.isOpen\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          buttonAttrs = _this$props.buttonAttrs,\n          children = _this$props.children,\n          closedButtonText = _this$props.closedButtonText,\n          icon = _this$props.icon,\n          isAnimated = _this$props.isAnimated,\n          isIconAnimated = _this$props.isIconAnimated,\n          isIconOnly = _this$props.isIconOnly,\n          isInitiallyOpen = _this$props.isInitiallyOpen,\n          onClose = _this$props.onClose,\n          onOpen = _this$props.onOpen,\n          openedButtonText = _this$props.openedButtonText,\n          customProps = _objectWithoutProperties(_this$props, [\"buttonAttrs\", \"children\", \"closedButtonText\", \"icon\", \"isAnimated\", \"isIconAnimated\", \"isIconOnly\", \"isInitiallyOpen\", \"onClose\", \"onOpen\", \"openedButtonText\"]); // Set openHeaderText to the same value as closedHeaderText if its not already set\n\n\n      var normalizedOpenButtonText = openedButtonText || closedButtonText;\n      var buttonText = !this.state.isOpen ? closedButtonText : normalizedOpenButtonText;\n      var text = isIconOnly ? closedButtonText : buttonText;\n      var toggleButtonClass = cx(['button', {\n        'is-open': this.state.isOpen\n      }, {\n        'is-icon-animated': isIconAnimated\n      }, customProps.className]);\n\n      var button = _react.default.createElement(_terraButton.default, _extends({}, buttonAttrs, {\n        isIconOnly: isIconOnly,\n        icon: _react.default.createElement(\"span\", {\n          className: cx('icon')\n        }, icon),\n        \"aria-expanded\": this.state.isOpen,\n        text: text,\n        onClick: this.handleOnClick\n      }));\n\n      return _react.default.createElement(\"div\", _extends({}, customProps, {\n        className: toggleButtonClass\n      }), button, _react.default.createElement(_terraToggle.default, {\n        isOpen: this.state.isOpen,\n        isAnimated: this.props.isAnimated\n      }, this.props.children));\n    }\n  }]);\n\n  return ToggleButton;\n}(_react.default.Component);\n\nToggleButton.propTypes = propTypes;\nToggleButton.defaultProps = defaultProps;\nvar _default = ToggleButton;\nexports.default = _default;","import React from 'react';\nimport NpmBadge from 'terra-dev-site/lib/loader-components/_NpmBadge';\n\nexport const Badge = ({ url }) => (\n      <NpmBadge\n        name=\"terra-toggle-button\"\n        version=\"3.32.0\"\n        url={url}\n      />\n    );","import React from 'react';\nimport Example from '/home/travis/build/cerner/terra-ui/node_modules/terra-toggle-button/lib/terra-dev-site/doc/example/DefaultToggleButton.js';\nimport Code from '/home/travis/build/cerner/terra-ui/node_modules/terra-toggle-button/lib/terra-dev-site/doc/example/DefaultToggleButton.js?dev-site-codeblock';\nimport ExampleTemplate from 'terra-dev-site/lib/loader-components/_ExampleTemplate';\n\nexport default ({ title, description, isExpanded }) => (\n      <ExampleTemplate\n        title={ title || 'Default Toggle Button'}\n        description={description}\n        example={<Example />}\n        exampleSrc={<Code />}\n        isExpanded={isExpanded}\n      />\n    );","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toggle-button\":\"ToggleButton-module__toggle-button___1z40f\",\"icon\":\"ToggleButton-module__icon___17qwh\",\"is-open\":\"ToggleButton-module__is-open___hOi8b\",\"is-icon-animated\":\"ToggleButton-module__is-icon-animated___29kQK\",\"button-text\":\"ToggleButton-module__button-text___1G3H_\"};","import React from 'react';\nimport Example from '/home/travis/build/cerner/terra-ui/node_modules/terra-toggle-button/lib/terra-dev-site/doc/example/AnimatedToggleButton.js';\nimport Code from '/home/travis/build/cerner/terra-ui/node_modules/terra-toggle-button/lib/terra-dev-site/doc/example/AnimatedToggleButton.js?dev-site-codeblock';\nimport ExampleTemplate from 'terra-dev-site/lib/loader-components/_ExampleTemplate';\n\nexport default ({ title, description, isExpanded }) => (\n      <ExampleTemplate\n        title={ title || 'Animated Toggle Button'}\n        description={description}\n        example={<Example />}\n        exampleSrc={<Code />}\n        isExpanded={isExpanded}\n      />\n    );","import React from 'react';\nimport Example from '/home/travis/build/cerner/terra-ui/node_modules/terra-toggle-button/lib/terra-dev-site/doc/example/ButtonAttrsToggleButton.js';\nimport Code from '/home/travis/build/cerner/terra-ui/node_modules/terra-toggle-button/lib/terra-dev-site/doc/example/ButtonAttrsToggleButton.js?dev-site-codeblock';\nimport ExampleTemplate from 'terra-dev-site/lib/loader-components/_ExampleTemplate';\n\nexport default ({ title, description, isExpanded }) => (\n      <ExampleTemplate\n        title={ title || 'Button Attrs Toggle Button'}\n        description={description}\n        example={<Example />}\n        exampleSrc={<Code />}\n        isExpanded={isExpanded}\n      />\n    );","import React from 'react';\nimport Example from '/home/travis/build/cerner/terra-ui/node_modules/terra-toggle-button/lib/terra-dev-site/doc/example/IsInitiallyOpenToggleButton.js';\nimport Code from '/home/travis/build/cerner/terra-ui/node_modules/terra-toggle-button/lib/terra-dev-site/doc/example/IsInitiallyOpenToggleButton.js?dev-site-codeblock';\nimport ExampleTemplate from 'terra-dev-site/lib/loader-components/_ExampleTemplate';\n\nexport default ({ title, description, isExpanded }) => (\n      <ExampleTemplate\n        title={ title || 'Is Initially Open Toggle Button'}\n        description={description}\n        example={<Example />}\n        exampleSrc={<Code />}\n        isExpanded={isExpanded}\n      />\n    );","import React from 'react';\nimport Example from '/home/travis/build/cerner/terra-ui/node_modules/terra-toggle-button/lib/terra-dev-site/doc/example/IsIconOnlyToggleButton.js';\nimport Code from '/home/travis/build/cerner/terra-ui/node_modules/terra-toggle-button/lib/terra-dev-site/doc/example/IsIconOnlyToggleButton.js?dev-site-codeblock';\nimport ExampleTemplate from 'terra-dev-site/lib/loader-components/_ExampleTemplate';\n\nexport default ({ title, description, isExpanded }) => (\n      <ExampleTemplate\n        title={ title || 'Is Icon Only Toggle Button'}\n        description={description}\n        example={<Example />}\n        exampleSrc={<Code />}\n        isExpanded={isExpanded}\n      />\n    );","import React from 'react';\nimport Example from '/home/travis/build/cerner/terra-ui/node_modules/terra-toggle-button/lib/terra-dev-site/doc/example/OpenCloseEventToggleButton.js';\nimport Code from '/home/travis/build/cerner/terra-ui/node_modules/terra-toggle-button/lib/terra-dev-site/doc/example/OpenCloseEventToggleButton.js?dev-site-codeblock';\nimport ExampleTemplate from 'terra-dev-site/lib/loader-components/_ExampleTemplate';\n\nexport default ({ title, description, isExpanded }) => (\n      <ExampleTemplate\n        title={ title || 'Open Close Event Toggle Button'}\n        description={description}\n        example={<Example />}\n        exampleSrc={<Code />}\n        isExpanded={isExpanded}\n      />\n    );","// extracted by mini-css-extract-plugin\nmodule.exports = {\"times-wrapper\":\"OpenCloseEventToggleButton-module__times-wrapper___210mV\"};","import React from 'react';\nimport Example from '/home/travis/build/cerner/terra-ui/node_modules/terra-toggle-button/lib/terra-dev-site/doc/example/OpenCloseTextToggleButton.js';\nimport Code from '/home/travis/build/cerner/terra-ui/node_modules/terra-toggle-button/lib/terra-dev-site/doc/example/OpenCloseTextToggleButton.js?dev-site-codeblock';\nimport ExampleTemplate from 'terra-dev-site/lib/loader-components/_ExampleTemplate';\n\nexport default ({ title, description, isExpanded }) => (\n      <ExampleTemplate\n        title={ title || 'Open Close Text Toggle Button'}\n        description={description}\n        example={<Example />}\n        exampleSrc={<Code />}\n        isExpanded={isExpanded}\n      />\n    );","import React from 'react';\nimport { mdx } from '@mdx-js/react';\nimport PropsTable from 'terra-dev-site/lib/loader-components/_PropsTable';\n\nexport default () => (\n <PropsTable\n   rows={[\n{ name: 'children', type: () => {\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`node`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nreturn MDXContent({});\n}, required: true, defaultValue: 'none', description: () => {\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`Content in the body of the toggle-button component that will be expanded or toggle-buttond`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nreturn MDXContent({});\n}, },\n{ name: 'closedButtonText', type: () => {\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`string`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nreturn MDXContent({});\n}, required: true, defaultValue: 'none', description: () => {\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`Sets the text inside of the button when the toggle-button component is closed`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nreturn MDXContent({});\n}, },\n{ name: 'buttonAttrs', type: () => {\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`object`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nreturn MDXContent({});\n}, required: false, defaultValue: 'none', description: () => {\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`Used to set props and HTML attributes on the toggle-button button`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nreturn MDXContent({});\n}, },\n{ name: 'icon', type: () => {\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`element`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nreturn MDXContent({});\n}, required: false, defaultValue: '<IconChevronRight />', description: () => {\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`Icon displayed next to text content within the toggle-button button`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nreturn MDXContent({});\n}, },\n{ name: 'isAnimated', type: () => {\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`bool`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nreturn MDXContent({});\n}, required: false, defaultValue: 'false', description: () => {\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`Sets the toggle-button to be animated when it is opened or closed`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nreturn MDXContent({});\n}, },\n{ name: 'isIconAnimated', type: () => {\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`bool`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nreturn MDXContent({});\n}, required: false, defaultValue: 'false', description: () => {\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`Used to turn on animation on toggle-button button icon`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nreturn MDXContent({});\n}, },\n{ name: 'isIconOnly', type: () => {\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`bool`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nreturn MDXContent({});\n}, required: false, defaultValue: 'false', description: () => {\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`Sets the toggle-button to only display and icon. Uses closedButtonText prop as an aria-label on the button.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nreturn MDXContent({});\n}, },\n{ name: 'isInitiallyOpen', type: () => {\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`bool`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nreturn MDXContent({});\n}, required: false, defaultValue: 'false', description: () => {\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`Sets the toggle-button initial state to open`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nreturn MDXContent({});\n}, },\n{ name: 'onClose', type: () => {\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`func`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nreturn MDXContent({});\n}, required: false, defaultValue: 'none', description: () => {\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`Callback function triggered when toggle-button is closed`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nreturn MDXContent({});\n}, },\n{ name: 'onOpen', type: () => {\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`func`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nreturn MDXContent({});\n}, required: false, defaultValue: 'none', description: () => {\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`Callback function triggered when toggle-button is opened`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nreturn MDXContent({});\n}, },\n{ name: 'openedButtonText', type: () => {\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`string`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nreturn MDXContent({});\n}, required: false, defaultValue: 'none', description: () => {\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`Sets the text inside of the button when the toggle-button component is open`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nreturn MDXContent({});\n}, },\n   ]}\n />\n);","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { Badge } from 'terra-toggle-button/package.json?dev-site-package';\nimport DefaultToggleButton from '../example/DefaultToggleButton?dev-site-example';\nimport AnimatedToggleButton from '../example/AnimatedToggleButton?dev-site-example';\nimport ButtonAttrsToggleButton from '../example/ButtonAttrsToggleButton?dev-site-example';\nimport IsInitiallyOpenToggleButton from '../example/IsInitiallyOpenToggleButton?dev-site-example';\nimport IsIconOnlyToggleButton from '../example/IsIconOnlyToggleButton?dev-site-example';\nimport OpenCloseEventToggleButton from '../example/OpenCloseEventToggleButton?dev-site-example';\nimport OpenCloseTextToggleButton from '../example/OpenCloseTextToggleButton?dev-site-example';\nimport ToggleButtonPropsTable from 'terra-toggle-button/src/ToggleButton?dev-site-props-table';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <Badge mdxType=\"Badge\" />\n    <h1 {...{\n      \"id\": \"terra-toggle-button\"\n    }}>{`Terra Toggle Button`}</h1>\n    <p>{`Toggle Button component that transitions content in and out with the click on a button.`}</p>\n    <h2 {...{\n      \"id\": \"getting-started\"\n    }}>{`Getting Started`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Install with `}<a parentName=\"li\" {...{\n          \"href\": \"https://www.npmjs.com/\"\n        }}>{`npmjs`}</a>{`:`}<ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`npm install terra-toggle-button`}</inlineCode></li>\n        </ul></li>\n    </ul>\n    {\n      /* AUTO-GENERATED-CONTENT:START Peer Dependencies */\n    }\n    <h2 {...{\n      \"id\": \"peer-dependencies\"\n    }}>{`Peer Dependencies`}</h2>\n    <p>{`This component requires the following peer dependencies be installed in your app for the component to properly function.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Peer Dependency`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Version`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`react`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`^16.8.5`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`react-dom`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`^16.8.5`}</td>\n        </tr>\n      </tbody>\n    </table>\n    {\n      /* AUTO-GENERATED-CONTENT:END */\n    }\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import ToggleButton from 'terra-toggle-button';\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"component-features\"\n    }}>{`Component Features`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://engineering.cerner.com/terra-ui/contributing/terra-ui/component-standards#cross-browser-support\"\n        }}>{`Cross-Browser Support`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://engineering.cerner.com/terra-ui/contributing/terra-ui/component-standards#responsive-support\"\n        }}>{`Responsive Support`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://engineering.cerner.com/terra-ui/contributing/terra-ui/component-standards#mobile-support\"\n        }}>{`Mobile Support`}</a></li>\n    </ul>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://github.com/cerner/terra-core/tree/master/packages/terra-toggle-button\"\n      }}>{`View component source code`}</a></p>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <DefaultToggleButton title=\"Default ToggleButton\" mdxType=\"DefaultToggleButton\" />\n    <AnimatedToggleButton title=\"isAnimated ToggleButton\" mdxType=\"AnimatedToggleButton\" />\n    <OpenCloseTextToggleButton title=\"Open / Close Button Text ToggleButton\" mdxType=\"OpenCloseTextToggleButton\" />\n    <IsIconOnlyToggleButton title=\"isIconOnly ToggleButton\" mdxType=\"IsIconOnlyToggleButton\" />\n    <IsInitiallyOpenToggleButton title=\"isInitiallyOpen ToggleButton\" mdxType=\"IsInitiallyOpenToggleButton\" />\n    <ButtonAttrsToggleButton title=\"Custom ToggleButton Button\" mdxType=\"ButtonAttrsToggleButton\" />\n    <OpenCloseEventToggleButton title=\"OnOpen / OnClose Callback ToggleButton\" mdxType=\"OpenCloseEventToggleButton\" />\n    <h2 {...{\n      \"id\": \"toggle-button-props\"\n    }}>{`Toggle Button Props`}</h2>\n    <ToggleButtonPropsTable mdxType=\"ToggleButtonPropsTable\" />\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}